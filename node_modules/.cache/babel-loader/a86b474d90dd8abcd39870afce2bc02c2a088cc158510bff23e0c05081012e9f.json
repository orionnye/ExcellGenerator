{"ast":null,"code":"var _jsxFileName = \"/Users/ConScholar/Projects/Training/BigData/ExcelGenerator/src/components/FolderSelector.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FolderSelector = ({\n  onFolderSelect,\n  isScanning\n}) => {\n  _s();\n  const [inputPath, setInputPath] = useState('');\n  const handleInputChange = e => {\n    setInputPath(e.target.value);\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (inputPath.trim()) {\n      onFolderSelect(inputPath.trim());\n    }\n  };\n  const handleFolderPicker = async () => {\n    try {\n      // Use the File System Access API if available\n      if ('showDirectoryPicker' in window) {\n        const directoryHandle = await window.showDirectoryPicker();\n        onFolderSelect(directoryHandle.name);\n      } else {\n        // Fallback to input method\n        alert('Please enter the folder path manually in the text input.');\n      }\n    } catch (error) {\n      console.log('User cancelled folder selection');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"folder-selector\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Select Folder to Scan\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"selector-options\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: handleFolderPicker,\n        disabled: isScanning,\n        className: \"folder-picker-btn\",\n        children: \"\\uD83D\\uDCC1 Choose Folder\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"divider\",\n        children: \"or\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        className: \"path-input-form\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: inputPath,\n          onChange: handleInputChange,\n          placeholder: \"Enter folder path manually...\",\n          disabled: isScanning,\n          className: \"path-input\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          disabled: isScanning || !inputPath.trim(),\n          className: \"scan-btn\",\n          children: isScanning ? 'Scanning...' : 'Scan Folder'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 3\n  }, this);\n};\n_s(FolderSelector, \"LyxcT9nt3BJjh2/TLck5Xj7jlHA=\");\n_c = FolderSelector;\nexport default FolderSelector;\nvar _c;\n$RefreshReg$(_c, \"FolderSelector\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","FolderSelector","onFolderSelect","isScanning","_s","inputPath","setInputPath","handleInputChange","e","target","value","handleSubmit","preventDefault","trim","handleFolderPicker","window","directoryHandle","showDirectoryPicker","name","alert","error","console","log","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onClick","disabled","onSubmit","onChange","placeholder","_c","$RefreshReg$"],"sources":["/Users/ConScholar/Projects/Training/BigData/ExcelGenerator/src/components/FolderSelector.tsx"],"sourcesContent":["import React, { useState } from 'react';\n\ninterface FolderSelectorProps {\n\tonFolderSelect: (folderPath: string) => void;\n\tisScanning: boolean;\n}\n\nconst FolderSelector: React.FC<FolderSelectorProps> = ({ onFolderSelect, isScanning }) => {\n\tconst [inputPath, setInputPath] = useState('');\n\n\tconst handleInputChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n\t\tsetInputPath(e.target.value);\n\t};\n\n\tconst handleSubmit = (e: React.FormEvent) => {\n\t\te.preventDefault();\n\t\tif (inputPath.trim()) {\n\t\t\tonFolderSelect(inputPath.trim());\n\t\t}\n\t};\n\n\tconst handleFolderPicker = async () => {\n\t\ttry {\n\t\t\t// Use the File System Access API if available\n\t\t\tif ('showDirectoryPicker' in window) {\n\t\t\t\tconst directoryHandle = await (window as any).showDirectoryPicker();\n\t\t\t\tonFolderSelect(directoryHandle.name);\n\t\t\t} else {\n\t\t\t\t// Fallback to input method\n\t\t\t\talert('Please enter the folder path manually in the text input.');\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tconsole.log('User cancelled folder selection');\n\t\t}\n\t};\n\n\treturn (\n\t\t<div className=\"folder-selector\">\n\t\t\t<h2>Select Folder to Scan</h2>\n\t\t\t\n\t\t\t<div className=\"selector-options\">\n\t\t\t\t<button\n\t\t\t\t\ttype=\"button\"\n\t\t\t\t\tonClick={handleFolderPicker}\n\t\t\t\t\tdisabled={isScanning}\n\t\t\t\t\tclassName=\"folder-picker-btn\"\n\t\t\t\t>\n\t\t\t\t\tüìÅ Choose Folder\n\t\t\t\t</button>\n\t\t\t\t\n\t\t\t\t<span className=\"divider\">or</span>\n\t\t\t\t\n\t\t\t\t<form onSubmit={handleSubmit} className=\"path-input-form\">\n\t\t\t\t\t<input\n\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\tvalue={inputPath}\n\t\t\t\t\t\tonChange={handleInputChange}\n\t\t\t\t\t\tplaceholder=\"Enter folder path manually...\"\n\t\t\t\t\t\tdisabled={isScanning}\n\t\t\t\t\t\tclassName=\"path-input\"\n\t\t\t\t\t/>\n\t\t\t\t\t<button\n\t\t\t\t\t\ttype=\"submit\"\n\t\t\t\t\t\tdisabled={isScanning || !inputPath.trim()}\n\t\t\t\t\t\tclassName=\"scan-btn\"\n\t\t\t\t\t>\n\t\t\t\t\t\t{isScanning ? 'Scanning...' : 'Scan Folder'}\n\t\t\t\t\t</button>\n\t\t\t\t</form>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default FolderSelector;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}