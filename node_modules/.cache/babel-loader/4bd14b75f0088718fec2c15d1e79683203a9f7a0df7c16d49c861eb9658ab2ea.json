{"ast":null,"code":"export const downloadFileCount=folderData=>{// Create the text content\nconst content=\"File Count Report\\n=================\\n\\nFolder Path: \".concat(folderData.path,\"\\nScan Date: \").concat(folderData.lastScanned.toLocaleString(),\"\\nTotal Files: \").concat(folderData.fileCount,\"\\n\\nFile List:\\n\").concat(folderData.files.map((file,index)=>\"\".concat(index+1,\". \").concat(file)).join('\\n'),\"\\n\\n---\\nGenerated by Excel Generator\\n\");// Create a Blob with the content\nconst blob=new Blob([content],{type:'text/plain'});// Create a temporary URL for the blob\nconst url=URL.createObjectURL(blob);// Create a temporary anchor element for download\nconst link=document.createElement('a');link.href=url;link.download=\"file-count-\".concat(folderData.path.replace(/[^a-zA-Z0-9]/g,'_'),\"-\").concat(new Date().toISOString().split('T')[0],\".txt\");// Trigger the download\ndocument.body.appendChild(link);link.click();// Cleanup\ndocument.body.removeChild(link);URL.revokeObjectURL(url);};","map":{"version":3,"names":["downloadFileCount","folderData","content","concat","path","lastScanned","toLocaleString","fileCount","files","map","file","index","join","blob","Blob","type","url","URL","createObjectURL","link","document","createElement","href","download","replace","Date","toISOString","split","body","appendChild","click","removeChild","revokeObjectURL"],"sources":["/Users/ConScholar/Projects/Training/BigData/ExcelGenerator/src/utils/fileDownload.ts"],"sourcesContent":["import { FolderData } from '../types/FolderData';\n\nexport const downloadFileCount = (folderData: FolderData) => {\n\t// Create the text content\n\tconst content = `File Count Report\n=================\n\nFolder Path: ${folderData.path}\nScan Date: ${folderData.lastScanned.toLocaleString()}\nTotal Files: ${folderData.fileCount}\n\nFile List:\n${folderData.files.map((file, index) => `${index + 1}. ${file}`).join('\\n')}\n\n---\nGenerated by Excel Generator\n`;\n\n\t// Create a Blob with the content\n\tconst blob = new Blob([content], { type: 'text/plain' });\n\n\t// Create a temporary URL for the blob\n\tconst url = URL.createObjectURL(blob);\n\n\t// Create a temporary anchor element for download\n\tconst link = document.createElement('a');\n\tlink.href = url;\n\tlink.download = `file-count-${folderData.path.replace(/[^a-zA-Z0-9]/g, '_')}-${new Date().toISOString().split('T')[0]}.txt`;\n\t\n\t// Trigger the download\n\tdocument.body.appendChild(link);\n\tlink.click();\n\t\n\t// Cleanup\n\tdocument.body.removeChild(link);\n\tURL.revokeObjectURL(url);\n};\n"],"mappings":"AAEA,MAAO,MAAM,CAAAA,iBAAiB,CAAIC,UAAsB,EAAK,CAC5D;AACA,KAAM,CAAAC,OAAO,yDAAAC,MAAA,CAGCF,UAAU,CAACG,IAAI,kBAAAD,MAAA,CACjBF,UAAU,CAACI,WAAW,CAACC,cAAc,CAAC,CAAC,oBAAAH,MAAA,CACrCF,UAAU,CAACM,SAAS,qBAAAJ,MAAA,CAGjCF,UAAU,CAACO,KAAK,CAACC,GAAG,CAAC,CAACC,IAAI,CAAEC,KAAK,MAAAR,MAAA,CAAQQ,KAAK,CAAG,CAAC,OAAAR,MAAA,CAAKO,IAAI,CAAE,CAAC,CAACE,IAAI,CAAC,IAAI,CAAC,2CAI1E,CAEA;AACA,KAAM,CAAAC,IAAI,CAAG,GAAI,CAAAC,IAAI,CAAC,CAACZ,OAAO,CAAC,CAAE,CAAEa,IAAI,CAAE,YAAa,CAAC,CAAC,CAExD;AACA,KAAM,CAAAC,GAAG,CAAGC,GAAG,CAACC,eAAe,CAACL,IAAI,CAAC,CAErC;AACA,KAAM,CAAAM,IAAI,CAAGC,QAAQ,CAACC,aAAa,CAAC,GAAG,CAAC,CACxCF,IAAI,CAACG,IAAI,CAAGN,GAAG,CACfG,IAAI,CAACI,QAAQ,eAAApB,MAAA,CAAiBF,UAAU,CAACG,IAAI,CAACoB,OAAO,CAAC,eAAe,CAAE,GAAG,CAAC,MAAArB,MAAA,CAAI,GAAI,CAAAsB,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC,CAACC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,QAAM,CAE3H;AACAP,QAAQ,CAACQ,IAAI,CAACC,WAAW,CAACV,IAAI,CAAC,CAC/BA,IAAI,CAACW,KAAK,CAAC,CAAC,CAEZ;AACAV,QAAQ,CAACQ,IAAI,CAACG,WAAW,CAACZ,IAAI,CAAC,CAC/BF,GAAG,CAACe,eAAe,CAAChB,GAAG,CAAC,CACzB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}