{"ast":null,"code":"export const downloadFileCount = folderData => {\n  // Create the text content\n  const content = `File Count Report\n=================\n\nFolder Path: ${folderData.path}\nScan Date: ${folderData.lastScanned.toLocaleString()}\nTotal Files: ${folderData.fileCount}\n\nFile List:\n${folderData.files.map((file, index) => `${index + 1}. ${file}`).join('\\n')}\n\n---\nGenerated by Excel Generator\n`;\n\n  // Create a Blob with the content\n  const blob = new Blob([content], {\n    type: 'text/plain'\n  });\n\n  // Create a temporary URL for the blob\n  const url = URL.createObjectURL(blob);\n\n  // Create a temporary anchor element for download\n  const link = document.createElement('a');\n  link.href = url;\n  link.download = `file-count-${folderData.path.replace(/[^a-zA-Z0-9]/g, '_')}-${new Date().toISOString().split('T')[0]}.txt`;\n\n  // Trigger the download\n  document.body.appendChild(link);\n  link.click();\n\n  // Cleanup\n  document.body.removeChild(link);\n  URL.revokeObjectURL(url);\n};","map":{"version":3,"names":["downloadFileCount","folderData","content","path","lastScanned","toLocaleString","fileCount","files","map","file","index","join","blob","Blob","type","url","URL","createObjectURL","link","document","createElement","href","download","replace","Date","toISOString","split","body","appendChild","click","removeChild","revokeObjectURL"],"sources":["/Users/ConScholar/Projects/Training/BigData/ExcelGenerator/src/utils/fileDownload.ts"],"sourcesContent":["import { FolderData } from '../types/FolderData';\n\nexport const downloadFileCount = (folderData: FolderData) => {\n\t// Create the text content\n\tconst content = `File Count Report\n=================\n\nFolder Path: ${folderData.path}\nScan Date: ${folderData.lastScanned.toLocaleString()}\nTotal Files: ${folderData.fileCount}\n\nFile List:\n${folderData.files.map((file, index) => `${index + 1}. ${file}`).join('\\n')}\n\n---\nGenerated by Excel Generator\n`;\n\n\t// Create a Blob with the content\n\tconst blob = new Blob([content], { type: 'text/plain' });\n\n\t// Create a temporary URL for the blob\n\tconst url = URL.createObjectURL(blob);\n\n\t// Create a temporary anchor element for download\n\tconst link = document.createElement('a');\n\tlink.href = url;\n\tlink.download = `file-count-${folderData.path.replace(/[^a-zA-Z0-9]/g, '_')}-${new Date().toISOString().split('T')[0]}.txt`;\n\t\n\t// Trigger the download\n\tdocument.body.appendChild(link);\n\tlink.click();\n\t\n\t// Cleanup\n\tdocument.body.removeChild(link);\n\tURL.revokeObjectURL(url);\n};\n"],"mappings":"AAEA,OAAO,MAAMA,iBAAiB,GAAIC,UAAsB,IAAK;EAC5D;EACA,MAAMC,OAAO,GAAG;AACjB;AACA;AACA,eAAeD,UAAU,CAACE,IAAI;AAC9B,aAAaF,UAAU,CAACG,WAAW,CAACC,cAAc,CAAC,CAAC;AACpD,eAAeJ,UAAU,CAACK,SAAS;AACnC;AACA;AACA,EAAEL,UAAU,CAACM,KAAK,CAACC,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,KAAK,GAAGA,KAAK,GAAG,CAAC,KAAKD,IAAI,EAAE,CAAC,CAACE,IAAI,CAAC,IAAI,CAAC;AAC3E;AACA;AACA;AACA,CAAC;;EAEA;EACA,MAAMC,IAAI,GAAG,IAAIC,IAAI,CAAC,CAACX,OAAO,CAAC,EAAE;IAAEY,IAAI,EAAE;EAAa,CAAC,CAAC;;EAExD;EACA,MAAMC,GAAG,GAAGC,GAAG,CAACC,eAAe,CAACL,IAAI,CAAC;;EAErC;EACA,MAAMM,IAAI,GAAGC,QAAQ,CAACC,aAAa,CAAC,GAAG,CAAC;EACxCF,IAAI,CAACG,IAAI,GAAGN,GAAG;EACfG,IAAI,CAACI,QAAQ,GAAG,cAAcrB,UAAU,CAACE,IAAI,CAACoB,OAAO,CAAC,eAAe,EAAE,GAAG,CAAC,IAAI,IAAIC,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC,CAACC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,MAAM;;EAE3H;EACAP,QAAQ,CAACQ,IAAI,CAACC,WAAW,CAACV,IAAI,CAAC;EAC/BA,IAAI,CAACW,KAAK,CAAC,CAAC;;EAEZ;EACAV,QAAQ,CAACQ,IAAI,CAACG,WAAW,CAACZ,IAAI,CAAC;EAC/BF,GAAG,CAACe,eAAe,CAAChB,GAAG,CAAC;AACzB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}