{"ast":null,"code":"var _jsxFileName = \"/Users/ConScholar/Projects/Training/BigData/ExcelGenerator/src/App.tsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useFolderScanner } from './hooks/useFolderScanner';\nimport FolderSelector from './components/FolderSelector';\nimport FolderResults from './components/FolderResults';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const {\n    folderData,\n    isScanning,\n    error,\n    scanFolder,\n    resetFolder\n  } = useFolderScanner();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"app-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"\\uD83D\\uDCCA Excel Generator\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Scan folders and count files for Excel generation\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"app-main\",\n      children: [/*#__PURE__*/_jsxDEV(FolderSelector, {\n        onFolderSelect: scanFolder,\n        isScanning: isScanning\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 5\n      }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error-message\",\n        children: [\"\\u274C Error: \", error]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 6\n      }, this), folderData && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"results-section\",\n        children: [/*#__PURE__*/_jsxDEV(FolderResults, {\n          folderData: folderData\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: resetFolder,\n          className: \"reset-btn\",\n          children: \"Scan Different Folder\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 6\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 3\n  }, this);\n};\n_s(App, \"kpsXvNQoSKRHe99JmPalV1PN+lA=\", false, function () {\n  return [useFolderScanner];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useFolderScanner","FolderSelector","FolderResults","jsxDEV","_jsxDEV","App","_s","folderData","isScanning","error","scanFolder","resetFolder","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onFolderSelect","onClick","_c","$RefreshReg$"],"sources":["/Users/ConScholar/Projects/Training/BigData/ExcelGenerator/src/App.tsx"],"sourcesContent":["import React from 'react';\nimport { useFolderScanner } from './hooks/useFolderScanner';\nimport FolderSelector from './components/FolderSelector';\nimport FolderResults from './components/FolderResults';\nimport './App.css';\n\nconst App: React.FC = () => {\n\tconst { folderData, isScanning, error, scanFolder, resetFolder } = useFolderScanner();\n\n\treturn (\n\t\t<div className=\"App\">\n\t\t\t<header className=\"app-header\">\n\t\t\t\t<h1>üìä Excel Generator</h1>\n\t\t\t\t<p>Scan folders and count files for Excel generation</p>\n\t\t\t</header>\n\t\t\t\n\t\t\t<main className=\"app-main\">\n\t\t\t\t<FolderSelector \n\t\t\t\t\tonFolderSelect={scanFolder}\n\t\t\t\t\tisScanning={isScanning}\n\t\t\t\t/>\n\t\t\t\t\n\t\t\t\t{error && (\n\t\t\t\t\t<div className=\"error-message\">\n\t\t\t\t\t\t‚ùå Error: {error}\n\t\t\t\t\t</div>\n\t\t\t\t)}\n\t\t\t\t\n\t\t\t\t{folderData && (\n\t\t\t\t\t<div className=\"results-section\">\n\t\t\t\t\t\t<FolderResults folderData={folderData} />\n\t\t\t\t\t\t<button \n\t\t\t\t\t\t\tonClick={resetFolder}\n\t\t\t\t\t\t\tclassName=\"reset-btn\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\tScan Different Folder\n\t\t\t\t\t\t</button>\n\t\t\t\t\t</div>\n\t\t\t\t)}\n\t\t\t</main>\n\t\t</div>\n\t);\n};\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,gBAAgB,QAAQ,0BAA0B;AAC3D,OAAOC,cAAc,MAAM,6BAA6B;AACxD,OAAOC,aAAa,MAAM,4BAA4B;AACtD,OAAO,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnB,MAAMC,GAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC3B,MAAM;IAAEC,UAAU;IAAEC,UAAU;IAAEC,KAAK;IAAEC,UAAU;IAAEC;EAAY,CAAC,GAAGX,gBAAgB,CAAC,CAAC;EAErF,oBACCI,OAAA;IAAKQ,SAAS,EAAC,KAAK;IAAAC,QAAA,gBACnBT,OAAA;MAAQQ,SAAS,EAAC,YAAY;MAAAC,QAAA,gBAC7BT,OAAA;QAAAS,QAAA,EAAI;MAAkB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC3Bb,OAAA;QAAAS,QAAA,EAAG;MAAiD;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjD,CAAC,eAETb,OAAA;MAAMQ,SAAS,EAAC,UAAU;MAAAC,QAAA,gBACzBT,OAAA,CAACH,cAAc;QACdiB,cAAc,EAAER,UAAW;QAC3BF,UAAU,EAAEA;MAAW;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACvB,CAAC,EAEDR,KAAK,iBACLL,OAAA;QAAKQ,SAAS,EAAC,eAAe;QAAAC,QAAA,GAAC,gBACrB,EAACJ,KAAK;MAAA;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACX,CACL,EAEAV,UAAU,iBACVH,OAAA;QAAKQ,SAAS,EAAC,iBAAiB;QAAAC,QAAA,gBAC/BT,OAAA,CAACF,aAAa;UAACK,UAAU,EAAEA;QAAW;UAAAO,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eACzCb,OAAA;UACCe,OAAO,EAAER,WAAY;UACrBC,SAAS,EAAC,WAAW;UAAAC,QAAA,EACrB;QAED;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACL,CACL;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAER,CAAC;AAACX,EAAA,CApCID,GAAa;EAAA,QACiDL,gBAAgB;AAAA;AAAAoB,EAAA,GAD9Ef,GAAa;AAsCnB,eAAeA,GAAG;AAAC,IAAAe,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}